name: Creation of Release Version
on:  
  push:
  pull_request:
    branches:
      - 'master'
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Bumping and Creating tags
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: git
        run: |
           git fetch --all --tags
      - name: Creating release Version 
        uses: paulhatch/semantic-version@v5.0.0-alpha2
        with:
          # The prefix to use to identify tags
          # tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "major"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "minor"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          # change_path: src/hello
          # Named version, will be used as suffix for name version tag
          # namespace: hello
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: true
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          # search_commit_body: true
